/**
 * Copyright (C) 2011 - present by OpenGamma Inc. and the OpenGamma group of companies
 *
 * Please see distribution for license.
 */
package com.opengamma.analytics.financial.instrument.index;

import org.apache.commons.lang.ObjectUtils;
import org.threeten.bp.ZonedDateTime;

import com.opengamma.analytics.financial.instrument.annuity.AnnuityCouponFixedDefinition;
import com.opengamma.analytics.financial.instrument.annuity.AnnuityDefinition;
import com.opengamma.analytics.financial.instrument.payment.CouponDefinition;
import com.opengamma.analytics.financial.instrument.swap.SwapFixedIborDefinition;
import com.opengamma.util.ArgumentChecker;

/**
 * Class with the description of swap characteristics.
 */
public class GeneratorSwapFixedIbor extends GeneratorInstrument<GeneratorAttributeIROTC> {

  /**
   * The fixed leg generator. Not null.
   */
  private final GeneratorLegFixed _fixedLegGenerator;
  /**
   * The Ibor leg generator. Not null.
   */
  private final GeneratorLegIbor _iborLegGenerator;
  
 /**
  * Constructor from two legs.
  * @param name The generator name.
  * @param fixedLegGenerator The fixed leg generator.
  * @param iborLegGenerator The Ibor leg generator.
  */
  public GeneratorSwapFixedIbor(final String name, final GeneratorLegFixed fixedLegGenerator, final GeneratorLegIbor iborLegGenerator) {
    super(name);
    ArgumentChecker.notNull(fixedLegGenerator, "fixed leg generator");
    ArgumentChecker.notNull(iborLegGenerator, "ibor leg generator");
    _fixedLegGenerator = fixedLegGenerator;
    _iborLegGenerator = iborLegGenerator;
  }

 /**
  * Returns the swap generator fixed leg.
  * @return The generator.
  */
  public GeneratorLegFixed getFixedLegGenerator() {
    return _fixedLegGenerator;
  }

 /**
  * Returns the swap generator Ibor leg.
  * @return The generator.
  */
  public GeneratorLegIbor getIborLegGenerator() {
    return _iborLegGenerator;
  }
  
  /**
   * {@inheritDoc}
   * Payer swap with each leg generated by the respective leg generators.
   */
  @Override
  public SwapFixedIborDefinition generateInstrument(final ZonedDateTime tradeDate, final double rate, final double notional, final GeneratorAttributeIROTC attribute) {
    ArgumentChecker.notNull(tradeDate, "Reference date");
    ArgumentChecker.notNull(attribute, "Attributes");
    final AnnuityCouponFixedDefinition fixedLeg = _fixedLegGenerator.generateInstrument(tradeDate, rate, notional, attribute, true);
    final AnnuityDefinition<? extends CouponDefinition> iborLeg = _iborLegGenerator.generateInstrument(tradeDate, notional, attribute, false);
    return new SwapFixedIborDefinition(fixedLeg, iborLeg);
  }

  @Override
  public int hashCode() {
    final int prime = 31;
    int result = super.hashCode();
    result = prime * result +  _fixedLegGenerator.hashCode();
    result = prime * result + _iborLegGenerator.hashCode();
    return result;
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (!super.equals(obj)) {
      return false;
    }
    if (getClass() != obj.getClass()) {
      return false;
    }
    GeneratorSwapFixedIbor other = (GeneratorSwapFixedIbor) obj;
    if (!ObjectUtils.equals(_fixedLegGenerator, other._fixedLegGenerator)) {
      return false;
    }
    if (!ObjectUtils.equals(_iborLegGenerator, other._iborLegGenerator)) {
      return false;
    }
    return true;
  }

}
